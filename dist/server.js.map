{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/constant.ts","webpack:///./node_modules/lightning-container/index.js","webpack:///./src/server.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","MSG_WORKER_SERVER_READY","MSG_WORKER_NEW","MSG_WORKER_POST_MESSAGE","MSG_WORKER_ADD_EVENT_LISTENER","MSG_WORKER_REMOVE_EVENT_LISTENER","MSG_WORKER_TERMINATE","MSG_WORKER_SERVER_MESSAGE_EVENT","sendMessage","userMessage","LCC","onlineSupport","payload","addErrorHandler","handler","removeErrorHandler","addMessageHandler","removeMessageHandler","getRESTAPISessionKey","callApex","fullyQualifiedApexMethodName","apexMethodParameters","callbackFunction","apexCallConfiguration","Visualforce","remoting","Manager","invokeAction","sendServerReady","Date","now","toString","workers","listeners","handleIncomingMessage","msg","instanceId","url","options","worker","Worker","e","console","error","message","postMessage","listener","type","data","handleWorkerMessage","addEventListener","removeEventListener","terminate","document","pid","setInterval","clearInterval","undefined"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export const MSG_WORKER_SERVER_READY = \"server:ready\";\nexport const MSG_WORKER_INIT = \"worker:init\";\nexport const MSG_WORKER_NEW = \"worker:new\";\nexport const MSG_WORKER_POST_MESSAGE = \"worker:postMessage\";\nexport const MSG_WORKER_ADD_EVENT_LISTENER = \"worker:addEventListener\";\nexport const MSG_WORKER_REMOVE_EVENT_LISTENER = \"worker:removeEventListener\";\nexport const MSG_WORKER_TERMINATE = \"worker:terminate\";\nexport const MSG_WORKER_SERVER_MESSAGE_EVENT = \"server:message\";\nexport const MSG_WORKER_SERVER_MESSAGE_ERROR_EVENT = \"server:messageerror\";\nexport const MSG_WORKER_SERVER_ERROR_EVENT = \"server:error\";\n","/*\nCopyright 2016 salesforce.com, inc. All rights reserved. \n\nUse of this software is subject to the salesforce.com Developerforce Terms of Use and other\napplicable terms that salesforce.com may make available, as may be amended from time to time.\nYou may not decompile, reverse engineer, disassemble, attempt to derive the source code of,\ndecrypt, modify, or create derivative works of this software, updates thereto, or any part\nthereof. You may not use the software to engage in any development activity that interferes\nwith, disrupts, damages, or accesses in an unauthorized manner the servers, networks, or\nother properties or services of salesforce.com or any third party.\n\nWITHOUT LIMITING THE GENERALITY OF THE FOREGOING, THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT\nWARRANTY OF ANY KIND, EXPRESS OR IMPLIED. IN NO EVENT SHALL SALESFORCE.COM HAVE ANY LIABILITY\nFOR ANY DAMAGES, INCLUDING BUT NOT LIMITED TO, DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE,\nOR CONSEQUENTIAL DAMAGES, OR DAMAGES BASED ON LOST PROFITS, DATA OR USE, IN CONNECTION WITH THE\nSOFTWARE, HOWEVER CAUSED AND, WHETHER IN CONTRACT, TORT OR UNDER ANY OTHER THEORY OF LIABILITY,\nWHETHER OR NOT YOU HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n*/\n\n'use strict';\n\nmodule.exports.sendMessage = function(userMessage) {\n    if (typeof LCC !== \"undefined\" && typeof LCC.onlineSupport !== \"undefined\") {\n        LCC.onlineSupport.sendMessage(\"containerUserMessage\", {payload: userMessage});\n    }\n    else {\n        // TODO: offline\n    }\n}\n\nmodule.exports.addErrorHandler = function(handler) {\n    if (typeof LCC !== \"undefined\" && typeof LCC.onlineSupport !== \"undefined\") {\n        LCC.onlineSupport.addErrorHandler(handler);\n    }\n    else {\n        // TODO: offline\n    }\n}\n\nmodule.exports.removeErrorHandler = function(handler) {\n    if (typeof LCC !== \"undefined\" && typeof LCC.onlineSupport !== \"undefined\") {\n        LCC.onlineSupport.removeErrorHandler(handler);\n    }\n    else {\n        // TODO: offline\n    }\n}\n\nmodule.exports.addMessageHandler = function(handler) {\n    if (typeof LCC !== \"undefined\" && typeof LCC.onlineSupport !== \"undefined\") {\n        LCC.onlineSupport.addMessageHandler(handler);\n    }\n    else {\n        // TODO: offline\n    }\n}\n\nmodule.exports.removeMessageHandler = function(handler) {\n    if (typeof LCC !== \"undefined\" && typeof LCC.onlineSupport !== \"undefined\") {\n        LCC.onlineSupport.removeMessageHandler(handler);\n    }\n    else {\n        // TODO: offline\n    }\n}\n\nmodule.exports.getRESTAPISessionKey = function() {\n    if (typeof LCC !== \"undefined\" && typeof LCC.onlineSupport !== \"undefined\") {\n        return LCC.onlineSupport.getRESTAPISessionKey();\n    }\n    else {\n        // TODO: offline\n        return \"\";\n    }\n}\n\nmodule.exports.callApex = function(fullyQualifiedApexMethodName,\n                                   apexMethodParameters,\n                                   callbackFunction,\n                                   apexCallConfiguration) {\n    if (typeof Visualforce !== \"undefined\" && \n        typeof Visualforce.remoting !== \"undefined\" &&\n        typeof Visualforce.remoting.Manager !== \"undefined\") {\n\n            Visualforce.remoting.Manager.invokeAction(fullyQualifiedApexMethodName,\n                                                      apexMethodParameters,\n                                                      callbackFunction,\n                                                      apexCallConfiguration);\n    }\n    else {\n        // TODO: offline\n    }\n}","import LCC from \"lightning-container\";\nimport {\n  MSG_WORKER_SERVER_READY,\n  MSG_WORKER_NEW,\n  MSG_WORKER_POST_MESSAGE,\n  MSG_WORKER_ADD_EVENT_LISTENER,\n  MSG_WORKER_REMOVE_EVENT_LISTENER,\n  MSG_WORKER_SERVER_MESSAGE_EVENT,\n  MSG_WORKER_TERMINATE,\n} from \"./constant\";\n\ntype WorkerCallPayload = {\n  instanceId: string;\n};\n\ntype NewWorkerPayload = WorkerCallPayload & {\n  url: string;\n  options: WorkerOptions | undefined;\n};\n\ntype PostMessagePayload = WorkerCallPayload & {\n  message: any;\n};\n\nfunction sendServerReady() {\n  LCC.sendMessage({\n    name: MSG_WORKER_SERVER_READY,\n    value: Date.now().toString(),\n  });\n}\n\nconst workers: { [id: string]: Worker } = {};\nconst listeners: { [id: string]: (e: MessageEvent) => void } = {};\n\nfunction handleIncomingMessage(msg: any) {\n  switch (msg.name) {\n    case MSG_WORKER_NEW: {\n      const { instanceId, url, options } = msg.value as NewWorkerPayload;\n      try {\n        const worker = new Worker(url, options);\n        workers[instanceId] = worker;\n      } catch (e) {\n        console.error(e);\n      }\n      break;\n    }\n    case MSG_WORKER_POST_MESSAGE: {\n      const { instanceId, message } = msg.value as PostMessagePayload;\n      const worker = workers[instanceId];\n      if (worker) {\n        worker.postMessage(message);\n      }\n      break;\n    }\n    case MSG_WORKER_ADD_EVENT_LISTENER: {\n      const { instanceId } = msg.value as WorkerCallPayload;\n      const worker = workers[instanceId];\n      if (worker) {\n        const listener = (e: MessageEvent) => {\n          handleWorkerMessage(instanceId, e);\n        };\n        listeners[instanceId] = listener;\n        worker.addEventListener(\"message\", listener);\n      }\n      break;\n    }\n    case MSG_WORKER_REMOVE_EVENT_LISTENER: {\n      const { instanceId } = msg.value as WorkerCallPayload;\n      const worker = workers[instanceId];\n      if (worker) {\n        const listener = listeners[instanceId];\n        if (listener) {\n          worker.removeEventListener(\"message\", listener);\n          delete listeners[instanceId];\n        }\n      }\n      break;\n    }\n    case MSG_WORKER_TERMINATE: {\n      const { instanceId } = msg.value as WorkerCallPayload;\n      const worker = workers[instanceId];\n      if (worker) {\n        worker.terminate();\n        delete workers[instanceId];\n        delete listeners[instanceId];\n      }\n      break;\n    }\n    default:\n      break;\n  }\n}\n\nfunction handleWorkerMessage(instanceId: string, e: MessageEvent) {\n  LCC.sendMessage({\n    name: MSG_WORKER_SERVER_MESSAGE_EVENT,\n    value: {\n      instanceId,\n      type: e.type,\n      data: e.data,\n    },\n  });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let pid: number | undefined = setInterval(sendServerReady, 500);\n  LCC.addMessageHandler((msg) => {\n    if (pid) {\n      clearInterval(pid);\n      pid = undefined;\n    }\n    handleIncomingMessage(msg);\n  });\n  sendServerReady();\n});\n"],"sourceRoot":""}